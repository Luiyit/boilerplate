<ul class="nav nav-tabs {{ className }}-tabs" id="tab-{{ linkId }}" role="tablist">
  {% for tab in tabs %}
    <li class="nav-item">
      <a 
        class="nav-link {{ loop.index == 1 and showFirst != false ? 'active' : ''}}" 
        id="tab-{{ loop.index }}" 
        data-toggle="tab" 
        href="#tab-content-{{ loop.index }}-{{ linkId }}" 
        role="tab" 
        aria-controls="tab-content-{{ loop.index }}-{{ linkId }}" 
        aria-selected="true"
      >
        {% include 'components/bs_title.twig' with {
          title: tab.title, 
          className: "bs-big-title-size d-inline-block my-2 my-md-0"
        } %}
        <span class="d-none d-md-inline-block">
          <i class="fas fa-chevron-down"></i>
          <i class="fas fa-chevron-up"></i>
        </span>
      </a>
      {% if loop.index != tabs | length %}
        <strong class="x-icon bs-big-title-size d-none-off d-md-inline-block">x</strong>
      {% endif %}
      
    </li>
  {% endfor %}
</ul>
<div class="tab-content {{ className }}-tab-content" id="myTabContent">
  {% for tab in tabs %}
    <div 
      class="tab-pane fade {{ loop.index == 1 and showFirst != false ? 'show active' : ''}} tab-{{ loop.index }}" 
      id="tab-content-{{ loop.index }}-{{ linkId }}" 
      role="tabpanel" 
      aria-labelledby="tab-{{ loop.index }}"
    >
      {{ tab.content }}
    </div>
  {% endfor %}
</div>

{# Specific fix required by client. Need this here because the id's are dynamics #}
<script>
  jQuery('#tab-{{ linkId }} a').on('click', function (e) {
    e.preventDefault()
    if(jQuery(this).hasClass('active')){
      // Add delay to wait bootstrap action, after that we hide the tab
      setTimeout(() => {
        const contentId = jQuery(this).attr('href');
        jQuery(this).removeClass('active');
        jQuery(contentId).removeClass('active').removeClass('show');
      }, 100);
    }
  })
</script>